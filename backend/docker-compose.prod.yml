version: '3'
services:
  nginx:
    image: nginx:alpine
    container_name: shop_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/shop/backend
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    networks:
      - shop
  certbot:
    image: certbot/certbot
    container_name: shop_certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
  laravel:
    container_name: shop_laravel
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - '.:/var/www/shop/backend'
    networks:
      - shop
    depends_on:
      - pgsql
      - redis
  pgsql:
    container_name: shop_postgres
    restart: unless-stopped
    image: 'postgres:14'
    ports:
      - '5432:5432'
    environment:
      PGPASSWORD: 'shop'
      POSTGRES_DB: 'shop'
      POSTGRES_USER: 'shop'
      POSTGRES_PASSWORD: 'shop'
    volumes:
      - 'shop-pgsql:/var/lib/postgresql/data'
    networks:
      - shop
  redis:
    container_name: shop_redis
    restart: unless-stopped
    image: 'redis:alpine'
    ports:
      - '6379:6379'
    volumes:
      - 'shop-redis:/data'
    networks:
      - shop
  vue-admin:
    container_name: shop_vue_admin
    build:
      context: ../frontend/vue-admin
      dockerfile: Dockerfile
    volumes:
      - ../frontend/vue-admin:/var/www/html
    networks:
      - shop
  vue-customer:
    container_name: shop_vue_customer
    build:
      context: ../frontend/vue-customer
      dockerfile: Dockerfile
    volumes:
      - ../frontend/vue-customer:/var/www/html
    networks:
      - shop
networks:
  shop:
    driver: bridge
volumes:
  shop-pgsql:
    driver: local
  shop-redis:
    driver: local
